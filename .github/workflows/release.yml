name: "Release All"

on:
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            arch: "silicon"
            type: "aarch64"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            arch: "silicon"
            type: "x86_64"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "ubuntu-22.04-arm"
            args: ""
          - platform: "windows-latest"
            args: "--target x86_64-pc-windows-msvc"
            arch: "arm64"
            type: "x86_64"
          - platform: "windows-latest"
            args: "--target aarch64-pc-windows-msvc"
            arch: "arm64"
            type: "aarch64"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' || matrix.platform == 'ubuntu-22.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf xdg-utils

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: install Rust stable (macos only)
        uses: dtolnay/rust-toolchain@stable
        if: matrix.platform == 'macos-latest'
        with:
          targets: ${{ matrix.type == 'aarch64' && 'aarch64-apple-darwin' || 'x86_64-apple-darwin' }}

      - name: install Rust stable (windows only)
        uses: dtolnay/rust-toolchain@stable
        if: matrix.platform == 'windows-latest'
        with:
          targets: ${{ matrix.type == 'aarch64' && 'aarch64-pc-windows-msvc' || 'x86_64-pc-windows-msvc' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"
          key: ${{ runner.os }}-${{ runner.arch }}

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.TAURI_TOKEN }}

          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: "RClone Manager v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: true
          args: ${{ matrix.args }}
